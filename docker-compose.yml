version: '3.8'

services:
  # Backend API with Bun.js
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend-bun-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=root
      - DB_PASSWORD=your_mysql_password
      - DB_DATABASE=your_database_name
      - SECRET_KEY=your-production-secret-key
      - APP_PORT=8080
    depends_on:
      - mysql
    networks:
      - backend-network
    volumes:
      - ./logs:/usr/src/app/logs
    healthcheck:
      test: ["CMD", "bun", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: backend-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: your_mysql_password
      MYSQL_DATABASE: your_database_name
      MYSQL_USER: your_mysql_user
      MYSQL_PASSWORD: your_mysql_user_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Adminer (Database Management Tool)
  adminer:
    image: adminer:latest
    container_name: backend-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    networks:
      - backend-network

volumes:
  mysql_data:
    driver: local

networks:
  backend-network:
    driver: bridge